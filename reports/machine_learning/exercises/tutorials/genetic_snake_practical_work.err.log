Traceback (most recent call last):
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
np.random.seed(0)  # Fixing the seed
fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)
snake = FastSnake(Nrow=10, Ncol=10)
show_gui(snake, ax)
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mAttributeError[0m                            Traceback (most recent call last)
Cell [1;32mIn[2], line 4[0m
[0;32m      2[0m fig [38;5;241m=[39m plt[38;5;241m.[39mfigure()
[0;32m      3[0m ax [38;5;241m=[39m fig[38;5;241m.[39madd_subplot([38;5;241m1[39m, [38;5;241m1[39m, [38;5;241m1[39m)
[1;32m----> 4[0m snake [38;5;241m=[39m FastSnake(Nrow[38;5;241m=[39m[38;5;241m10[39m, Ncol[38;5;241m=[39m[38;5;241m10[39m)
[0;32m      5[0m show_gui(snake, ax)

File [1;32mD:\Utilisateurs\rouxemi\Documents\dev\02_enseignement\positron\book\machine_learning\exercises\tutorials\snakelib.py:89[0m, in [0;36mFastSnake.__init__[1;34m(self, Nrow, Ncol, snake_color, snake_head_color, forbidden_color, fruit_color, void_color)[0m
[0;32m     87[0m [38;5;28mself[39m[38;5;241m.[39mfruit_color [38;5;241m=[39m fruit_color
[0;32m     88[0m [38;5;28mself[39m[38;5;241m.[39mvoid_color [38;5;241m=[39m void_color
[1;32m---> 89[0m [38;5;28mself[39m[38;5;241m.[39mreset()

File [1;32mD:\Utilisateurs\rouxemi\Documents\dev\02_enseignement\positron\book\machine_learning\exercises\tutorials\snakelib.py:106[0m, in [0;36mFastSnake.reset[1;34m(self, fix_seed)[0m
[0;32m    104[0m [38;5;66;03m# Initialize the snake's positions and activation status[39;00m
[0;32m    105[0m snake_positions [38;5;241m=[39m np[38;5;241m.[39mzeros_like(all_positions)
[1;32m--> 106[0m snake_active [38;5;241m=[39m np[38;5;241m.[39mzeros(Ncell, dtype[38;5;241m=[39mnp[38;5;241m.[39mbool)
[0;32m    107[0m snake_active[:[38;5;241m2[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m  [38;5;66;03m# Set the first two positions as active[39;00m
[0;32m    108[0m snake_positions[:[38;5;241m2[39m] [38;5;241m=[39m grid_values[[38;5;241m1[39m:[38;5;241m3[39m, [38;5;241m1[39m]  [38;5;66;03m# Set the initial snake position[39;00m

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\numpy\__init__.py:305[0m, in [0;36m__getattr__[1;34m(attr)[0m
[0;32m    300[0m     warnings[38;5;241m.[39mwarn(
[0;32m    301[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[0;32m    302[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[0;32m    304[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[1;32m--> 305[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[0;32m    307[0m [38;5;66;03m# Importing Tester requires importing all of UnitTest which is not a[39;00m
[0;32m    308[0m [38;5;66;03m# cheap import Since it is mainly used in test suits, we lazy import it[39;00m
[0;32m    309[0m [38;5;66;03m# here to save on the order of 10 ms of import time for most users[39;00m
[0;32m    310[0m [38;5;66;03m#[39;00m
[0;32m    311[0m [38;5;66;03m# The previous way Tester was imported also had a side effect of adding[39;00m
[0;32m    312[0m [38;5;66;03m# the full `numpy.testing` namespace[39;00m
[0;32m    313[0m [38;5;28;01mif[39;00m attr [38;5;241m==[39m [38;5;124m'[39m[38;5;124mtesting[39m[38;5;124m'[39m:

[1;31mAttributeError[0m: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

