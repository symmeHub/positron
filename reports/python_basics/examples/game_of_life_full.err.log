Traceback (most recent call last):
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# INITIAL CONFIGURATION
N = 100
t = np.linspace(0.0, 1.0, N + 1)
X, Y = np.meshgrid(t, t)
f = 4
C0 = np.sin(2.0 * np.pi * f * X) * np.sin(2.0 * np.pi * 2 * f * Y) > -0.1
g = LLCA(C0, rule="B3S23")


# ANIMATION
def updatefig(*args):
    g.iterate()
    im.set_array(g.C)
    return (im,)


fig, ax = plt.subplots(figsize=(8, 6))
ax.axis("off")
im = plt.imshow(g.C, interpolation="nearest", cmap=cm.binary, animated=True)
anim = animation.FuncAnimation(fig, updatefig, frames=200, interval=50, blit=True)

plt.close()
anim
# plt.show()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mAttributeError[0m                            Traceback (most recent call last)
Cell [1;32mIn[4], line 7[0m
[0;32m      5[0m f [38;5;241m=[39m [38;5;241m4[39m
[0;32m      6[0m C0 [38;5;241m=[39m np[38;5;241m.[39msin([38;5;241m2.0[39m [38;5;241m*[39m np[38;5;241m.[39mpi [38;5;241m*[39m f [38;5;241m*[39m X) [38;5;241m*[39m np[38;5;241m.[39msin([38;5;241m2.0[39m [38;5;241m*[39m np[38;5;241m.[39mpi [38;5;241m*[39m [38;5;241m2[39m [38;5;241m*[39m f [38;5;241m*[39m Y) [38;5;241m>[39m [38;5;241m-[39m[38;5;241m0.1[39m
[1;32m----> 7[0m g [38;5;241m=[39m LLCA(C0, rule[38;5;241m=[39m[38;5;124m"[39m[38;5;124mB3S23[39m[38;5;124m"[39m)
[0;32m     10[0m [38;5;66;03m# ANIMATION[39;00m
[0;32m     11[0m [38;5;28;01mdef[39;00m [38;5;21mupdatefig[39m([38;5;241m*[39margs):

Cell [1;32mIn[3], line 12[0m, in [0;36mLLCA.__init__[1;34m(self, C, rule)[0m
[0;32m     11[0m [38;5;28;01mdef[39;00m [38;5;21m__init__[39m([38;5;28mself[39m, C[38;5;241m=[39mnp[38;5;241m.[39mrandom[38;5;241m.[39mrand([38;5;241m50[39m, [38;5;241m50[39m), rule[38;5;241m=[39m[38;5;124m"[39m[38;5;124mB3S23[39m[38;5;124m"[39m):
[1;32m---> 12[0m     [38;5;28mself[39m[38;5;241m.[39mC [38;5;241m=[39m np[38;5;241m.[39marray(C)[38;5;241m.[39mastype(np[38;5;241m.[39mbool)
[0;32m     13[0m     [38;5;28mself[39m[38;5;241m.[39mrule [38;5;241m=[39m rule

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\numpy\__init__.py:305[0m, in [0;36m__getattr__[1;34m(attr)[0m
[0;32m    300[0m     warnings[38;5;241m.[39mwarn(
[0;32m    301[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[0;32m    302[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[0;32m    304[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[1;32m--> 305[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[0;32m    307[0m [38;5;66;03m# Importing Tester requires importing all of UnitTest which is not a[39;00m
[0;32m    308[0m [38;5;66;03m# cheap import Since it is mainly used in test suits, we lazy import it[39;00m
[0;32m    309[0m [38;5;66;03m# here to save on the order of 10 ms of import time for most users[39;00m
[0;32m    310[0m [38;5;66;03m#[39;00m
[0;32m    311[0m [38;5;66;03m# The previous way Tester was imported also had a side effect of adding[39;00m
[0;32m    312[0m [38;5;66;03m# the full `numpy.testing` namespace[39;00m
[0;32m    313[0m [38;5;28;01mif[39;00m attr [38;5;241m==[39m [38;5;124m'[39m[38;5;124mtesting[39m[38;5;124m'[39m:

[1;31mAttributeError[0m: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

