Traceback (most recent call last):
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "D:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
df.groupby(["groupe"]).mean()  # compte the mean of each note for each groupe
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mNotImplementedError[0m                       Traceback (most recent call last)
File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1490[0m, in [0;36mGroupBy._cython_agg_general.<locals>.array_func[1;34m(values)[0m
[0;32m   1489[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1490[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mgrouper[38;5;241m.[39m_cython_operation(
[0;32m   1491[0m         [38;5;124m"[39m[38;5;124maggregate[39m[38;5;124m"[39m,
[0;32m   1492[0m         values,
[0;32m   1493[0m         how,
[0;32m   1494[0m         axis[38;5;241m=[39mdata[38;5;241m.[39mndim [38;5;241m-[39m [38;5;241m1[39m,
[0;32m   1495[0m         min_count[38;5;241m=[39mmin_count,
[0;32m   1496[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m   1497[0m     )
[0;32m   1498[0m [38;5;28;01mexcept[39;00m [38;5;167;01mNotImplementedError[39;00m:
[0;32m   1499[0m     [38;5;66;03m# generally if we have numeric_only=False[39;00m
[0;32m   1500[0m     [38;5;66;03m# and non-applicable functions[39;00m
[0;32m   1501[0m     [38;5;66;03m# try to python agg[39;00m
[0;32m   1502[0m     [38;5;66;03m# TODO: shouldn't min_count matter?[39;00m

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:959[0m, in [0;36mBaseGrouper._cython_operation[1;34m(self, kind, values, how, axis, min_count, **kwargs)[0m
[0;32m    958[0m ngroups [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mngroups
[1;32m--> 959[0m [38;5;28;01mreturn[39;00m cy_op[38;5;241m.[39mcython_operation(
[0;32m    960[0m     values[38;5;241m=[39mvalues,
[0;32m    961[0m     axis[38;5;241m=[39maxis,
[0;32m    962[0m     min_count[38;5;241m=[39mmin_count,
[0;32m    963[0m     comp_ids[38;5;241m=[39mids,
[0;32m    964[0m     ngroups[38;5;241m=[39mngroups,
[0;32m    965[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m    966[0m )

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:657[0m, in [0;36mWrappedCythonOp.cython_operation[1;34m(self, values, axis, min_count, comp_ids, ngroups, **kwargs)[0m
[0;32m    649[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_ea_wrap_cython_operation(
[0;32m    650[0m         values,
[0;32m    651[0m         min_count[38;5;241m=[39mmin_count,
[1;32m   (...)[0m
[0;32m    654[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m    655[0m     )
[1;32m--> 657[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_cython_op_ndim_compat(
[0;32m    658[0m     values,
[0;32m    659[0m     min_count[38;5;241m=[39mmin_count,
[0;32m    660[0m     ngroups[38;5;241m=[39mngroups,
[0;32m    661[0m     comp_ids[38;5;241m=[39mcomp_ids,
[0;32m    662[0m     mask[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m    663[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m    664[0m )

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:497[0m, in [0;36mWrappedCythonOp._cython_op_ndim_compat[1;34m(self, values, min_count, ngroups, comp_ids, mask, result_mask, **kwargs)[0m
[0;32m    495[0m     [38;5;28;01mreturn[39;00m res[38;5;241m.[39mT
[1;32m--> 497[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_call_cython_op(
[0;32m    498[0m     values,
[0;32m    499[0m     min_count[38;5;241m=[39mmin_count,
[0;32m    500[0m     ngroups[38;5;241m=[39mngroups,
[0;32m    501[0m     comp_ids[38;5;241m=[39mcomp_ids,
[0;32m    502[0m     mask[38;5;241m=[39mmask,
[0;32m    503[0m     result_mask[38;5;241m=[39mresult_mask,
[0;32m    504[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m    505[0m )

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:541[0m, in [0;36mWrappedCythonOp._call_cython_op[1;34m(self, values, min_count, ngroups, comp_ids, mask, result_mask, **kwargs)[0m
[0;32m    540[0m out_shape [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_output_shape(ngroups, values)
[1;32m--> 541[0m func [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cython_function([38;5;28mself[39m[38;5;241m.[39mkind, [38;5;28mself[39m[38;5;241m.[39mhow, values[38;5;241m.[39mdtype, is_numeric)
[0;32m    542[0m values [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cython_vals(values)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:173[0m, in [0;36mWrappedCythonOp._get_cython_function[1;34m(cls, kind, how, dtype, is_numeric)[0m
[0;32m    171[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mobject[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m f[38;5;241m.[39m__signatures__:
[0;32m    172[0m     [38;5;66;03m# raise NotImplementedError here rather than TypeError later[39;00m
[1;32m--> 173[0m     [38;5;28;01mraise[39;00m [38;5;167;01mNotImplementedError[39;00m(
[0;32m    174[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mfunction is not implemented for this dtype: [39m[38;5;124m"[39m
[0;32m    175[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m[how->[39m[38;5;132;01m{[39;00mhow[38;5;132;01m}[39;00m[38;5;124m,dtype->[39m[38;5;132;01m{[39;00mdtype_str[38;5;132;01m}[39;00m[38;5;124m][39m[38;5;124m"[39m
[0;32m    176[0m     )
[0;32m    177[0m [38;5;28;01mreturn[39;00m f

[1;31mNotImplementedError[0m: function is not implemented for this dtype: [how->mean,dtype->object]

During handling of the above exception, another exception occurred:

[1;31mValueError[0m                                Traceback (most recent call last)
File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:1692[0m, in [0;36m_ensure_numeric[1;34m(x)[0m
[0;32m   1691[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1692[0m     x [38;5;241m=[39m [38;5;28mfloat[39m(x)
[0;32m   1693[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mTypeError[39;00m, [38;5;167;01mValueError[39;00m):
[0;32m   1694[0m     [38;5;66;03m# e.g. "1+1j" or "foo"[39;00m

[1;31mValueError[0m: could not convert string to float: 'MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM'

During handling of the above exception, another exception occurred:

[1;31mValueError[0m                                Traceback (most recent call last)
File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:1696[0m, in [0;36m_ensure_numeric[1;34m(x)[0m
[0;32m   1695[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1696[0m     x [38;5;241m=[39m [38;5;28mcomplex[39m(x)
[0;32m   1697[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m err:
[0;32m   1698[0m     [38;5;66;03m# e.g. "foo"[39;00m

[1;31mValueError[0m: complex() arg is a malformed string

The above exception was the direct cause of the following exception:

[1;31mTypeError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[16], line 1[0m
[1;32m----> 1[0m df[38;5;241m.[39mgroupby([[38;5;124m"[39m[38;5;124mgroupe[39m[38;5;124m"[39m])[38;5;241m.[39mmean()

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1855[0m, in [0;36mGroupBy.mean[1;34m(self, numeric_only, engine, engine_kwargs)[0m
[0;32m   1853[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_numba_agg_general(sliding_mean, engine_kwargs)
[0;32m   1854[0m [38;5;28;01melse[39;00m:
[1;32m-> 1855[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_cython_agg_general(
[0;32m   1856[0m         [38;5;124m"[39m[38;5;124mmean[39m[38;5;124m"[39m,
[0;32m   1857[0m         alt[38;5;241m=[39m[38;5;28;01mlambda[39;00m x: Series(x)[38;5;241m.[39mmean(numeric_only[38;5;241m=[39mnumeric_only),
[0;32m   1858[0m         numeric_only[38;5;241m=[39mnumeric_only,
[0;32m   1859[0m     )
[0;32m   1860[0m     [38;5;28;01mreturn[39;00m result[38;5;241m.[39m__finalize__([38;5;28mself[39m[38;5;241m.[39mobj, method[38;5;241m=[39m[38;5;124m"[39m[38;5;124mgroupby[39m[38;5;124m"[39m)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1507[0m, in [0;36mGroupBy._cython_agg_general[1;34m(self, how, alt, numeric_only, min_count, **kwargs)[0m
[0;32m   1503[0m         result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_agg_py_fallback(values, ndim[38;5;241m=[39mdata[38;5;241m.[39mndim, alt[38;5;241m=[39malt)
[0;32m   1505[0m     [38;5;28;01mreturn[39;00m result
[1;32m-> 1507[0m new_mgr [38;5;241m=[39m data[38;5;241m.[39mgrouped_reduce(array_func)
[0;32m   1508[0m res [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_wrap_agged_manager(new_mgr)
[0;32m   1509[0m out [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_wrap_aggregated_output(res)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\internals\managers.py:1503[0m, in [0;36mBlockManager.grouped_reduce[1;34m(self, func)[0m
[0;32m   1499[0m [38;5;28;01mif[39;00m blk[38;5;241m.[39mis_object:
[0;32m   1500[0m     [38;5;66;03m# split on object-dtype blocks bc some columns may raise[39;00m
[0;32m   1501[0m     [38;5;66;03m#  while others do not.[39;00m
[0;32m   1502[0m     [38;5;28;01mfor[39;00m sb [38;5;129;01min[39;00m blk[38;5;241m.[39m_split():
[1;32m-> 1503[0m         applied [38;5;241m=[39m sb[38;5;241m.[39mapply(func)
[0;32m   1504[0m         result_blocks [38;5;241m=[39m extend_blocks(applied, result_blocks)
[0;32m   1505[0m [38;5;28;01melse[39;00m:

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\internals\blocks.py:329[0m, in [0;36mBlock.apply[1;34m(self, func, **kwargs)[0m
[0;32m    323[0m [38;5;129m@final[39m
[0;32m    324[0m [38;5;28;01mdef[39;00m [38;5;21mapply[39m([38;5;28mself[39m, func, [38;5;241m*[39m[38;5;241m*[39mkwargs) [38;5;241m-[39m[38;5;241m>[39m [38;5;28mlist[39m[Block]:
[0;32m    325[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[0;32m    326[0m [38;5;124;03m    apply the function to my values; return a block if we are not[39;00m
[0;32m    327[0m [38;5;124;03m    one[39;00m
[0;32m    328[0m [38;5;124;03m    """[39;00m
[1;32m--> 329[0m     result [38;5;241m=[39m func([38;5;28mself[39m[38;5;241m.[39mvalues, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    331[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_split_op_result(result)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1503[0m, in [0;36mGroupBy._cython_agg_general.<locals>.array_func[1;34m(values)[0m
[0;32m   1490[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mgrouper[38;5;241m.[39m_cython_operation(
[0;32m   1491[0m         [38;5;124m"[39m[38;5;124maggregate[39m[38;5;124m"[39m,
[0;32m   1492[0m         values,
[1;32m   (...)[0m
[0;32m   1496[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m   1497[0m     )
[0;32m   1498[0m [38;5;28;01mexcept[39;00m [38;5;167;01mNotImplementedError[39;00m:
[0;32m   1499[0m     [38;5;66;03m# generally if we have numeric_only=False[39;00m
[0;32m   1500[0m     [38;5;66;03m# and non-applicable functions[39;00m
[0;32m   1501[0m     [38;5;66;03m# try to python agg[39;00m
[0;32m   1502[0m     [38;5;66;03m# TODO: shouldn't min_count matter?[39;00m
[1;32m-> 1503[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_agg_py_fallback(values, ndim[38;5;241m=[39mdata[38;5;241m.[39mndim, alt[38;5;241m=[39malt)
[0;32m   1505[0m [38;5;28;01mreturn[39;00m result

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1457[0m, in [0;36mGroupBy._agg_py_fallback[1;34m(self, values, ndim, alt)[0m
[0;32m   1452[0m     ser [38;5;241m=[39m df[38;5;241m.[39miloc[:, [38;5;241m0[39m]
[0;32m   1454[0m [38;5;66;03m# We do not get here with UDFs, so we know that our dtype[39;00m
[0;32m   1455[0m [38;5;66;03m#  should always be preserved by the implemented aggregations[39;00m
[0;32m   1456[0m [38;5;66;03m# TODO: Is this exactly right; see WrappedCythonOp get_result_dtype?[39;00m
[1;32m-> 1457[0m res_values [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mgrouper[38;5;241m.[39magg_series(ser, alt, preserve_dtype[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m   1459[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(values, Categorical):
[0;32m   1460[0m     [38;5;66;03m# Because we only get here with known dtype-preserving[39;00m
[0;32m   1461[0m     [38;5;66;03m#  reductions, we cast back to Categorical.[39;00m
[0;32m   1462[0m     [38;5;66;03m# TODO: if we ever get "rank" working, exclude it here.[39;00m
[0;32m   1463[0m     res_values [38;5;241m=[39m [38;5;28mtype[39m(values)[38;5;241m.[39m_from_sequence(res_values, dtype[38;5;241m=[39mvalues[38;5;241m.[39mdtype)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:994[0m, in [0;36mBaseGrouper.agg_series[1;34m(self, obj, func, preserve_dtype)[0m
[0;32m    987[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(obj) [38;5;241m>[39m [38;5;241m0[39m [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(obj[38;5;241m.[39m_values, np[38;5;241m.[39mndarray):
[0;32m    988[0m     [38;5;66;03m# we can preserve a little bit more aggressively with EA dtype[39;00m
[0;32m    989[0m     [38;5;66;03m#  because maybe_cast_pointwise_result will do a try/except[39;00m
[0;32m    990[0m     [38;5;66;03m#  with _from_sequence.  NB we are assuming here that _from_sequence[39;00m
[0;32m    991[0m     [38;5;66;03m#  is sufficiently strict that it casts appropriately.[39;00m
[0;32m    992[0m     preserve_dtype [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m--> 994[0m result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_aggregate_series_pure_python(obj, func)
[0;32m    996[0m npvalues [38;5;241m=[39m lib[38;5;241m.[39mmaybe_convert_objects(result, try_float[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m    997[0m [38;5;28;01mif[39;00m preserve_dtype:

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\ops.py:1015[0m, in [0;36mBaseGrouper._aggregate_series_pure_python[1;34m(self, obj, func)[0m
[0;32m   1012[0m splitter [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_splitter(obj, axis[38;5;241m=[39m[38;5;241m0[39m)
[0;32m   1014[0m [38;5;28;01mfor[39;00m i, group [38;5;129;01min[39;00m [38;5;28menumerate[39m(splitter):
[1;32m-> 1015[0m     res [38;5;241m=[39m func(group)
[0;32m   1016[0m     res [38;5;241m=[39m libreduction[38;5;241m.[39mextract_result(res)
[0;32m   1018[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m initialized:
[0;32m   1019[0m         [38;5;66;03m# We only do this validation on the first iteration[39;00m

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\groupby\groupby.py:1857[0m, in [0;36mGroupBy.mean.<locals>.<lambda>[1;34m(x)[0m
[0;32m   1853[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_numba_agg_general(sliding_mean, engine_kwargs)
[0;32m   1854[0m [38;5;28;01melse[39;00m:
[0;32m   1855[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_cython_agg_general(
[0;32m   1856[0m         [38;5;124m"[39m[38;5;124mmean[39m[38;5;124m"[39m,
[1;32m-> 1857[0m         alt[38;5;241m=[39m[38;5;28;01mlambda[39;00m x: Series(x)[38;5;241m.[39mmean(numeric_only[38;5;241m=[39mnumeric_only),
[0;32m   1858[0m         numeric_only[38;5;241m=[39mnumeric_only,
[0;32m   1859[0m     )
[0;32m   1860[0m     [38;5;28;01mreturn[39;00m result[38;5;241m.[39m__finalize__([38;5;28mself[39m[38;5;241m.[39mobj, method[38;5;241m=[39m[38;5;124m"[39m[38;5;124mgroupby[39m[38;5;124m"[39m)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\generic.py:11556[0m, in [0;36mNDFrame._add_numeric_operations.<locals>.mean[1;34m(self, axis, skipna, numeric_only, **kwargs)[0m
[0;32m  11539[0m [38;5;129m@doc[39m(
[0;32m  11540[0m     _num_doc,
[0;32m  11541[0m     desc[38;5;241m=[39m[38;5;124m"[39m[38;5;124mReturn the mean of the values over the requested axis.[39m[38;5;124m"[39m,
[1;32m   (...)[0m
[0;32m  11554[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m  11555[0m ):
[1;32m> 11556[0m     [38;5;28;01mreturn[39;00m NDFrame[38;5;241m.[39mmean([38;5;28mself[39m, axis, skipna, numeric_only, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\generic.py:11201[0m, in [0;36mNDFrame.mean[1;34m(self, axis, skipna, numeric_only, **kwargs)[0m
[0;32m  11194[0m [38;5;28;01mdef[39;00m [38;5;21mmean[39m(
[0;32m  11195[0m     [38;5;28mself[39m,
[0;32m  11196[0m     axis: Axis [38;5;241m|[39m [38;5;28;01mNone[39;00m [38;5;241m=[39m [38;5;241m0[39m,
[1;32m   (...)[0m
[0;32m  11199[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[0;32m  11200[0m ) [38;5;241m-[39m[38;5;241m>[39m Series [38;5;241m|[39m [38;5;28mfloat[39m:
[1;32m> 11201[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_stat_function(
[0;32m  11202[0m         [38;5;124m"[39m[38;5;124mmean[39m[38;5;124m"[39m, nanops[38;5;241m.[39mnanmean, axis, skipna, numeric_only, [38;5;241m*[39m[38;5;241m*[39mkwargs
[0;32m  11203[0m     )

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\generic.py:11158[0m, in [0;36mNDFrame._stat_function[1;34m(self, name, func, axis, skipna, numeric_only, **kwargs)[0m
[0;32m  11154[0m     nv[38;5;241m.[39mvalidate_stat_func((), kwargs, fname[38;5;241m=[39mname)
[0;32m  11156[0m validate_bool_kwarg(skipna, [38;5;124m"[39m[38;5;124mskipna[39m[38;5;124m"[39m, none_allowed[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m> 11158[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_reduce(
[0;32m  11159[0m     func, name[38;5;241m=[39mname, axis[38;5;241m=[39maxis, skipna[38;5;241m=[39mskipna, numeric_only[38;5;241m=[39mnumeric_only
[0;32m  11160[0m )

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\series.py:4670[0m, in [0;36mSeries._reduce[1;34m(self, op, name, axis, skipna, numeric_only, filter_type, **kwds)[0m
[0;32m   4665[0m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(
[0;32m   4666[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mSeries.[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m does not allow [39m[38;5;132;01m{[39;00mkwd_name[38;5;132;01m}[39;00m[38;5;124m=[39m[38;5;132;01m{[39;00mnumeric_only[38;5;132;01m}[39;00m[38;5;124m [39m[38;5;124m"[39m
[0;32m   4667[0m         [38;5;124m"[39m[38;5;124mwith non-numeric dtypes.[39m[38;5;124m"[39m
[0;32m   4668[0m     )
[0;32m   4669[0m [38;5;28;01mwith[39;00m np[38;5;241m.[39merrstate([38;5;28mall[39m[38;5;241m=[39m[38;5;124m"[39m[38;5;124mignore[39m[38;5;124m"[39m):
[1;32m-> 4670[0m     [38;5;28;01mreturn[39;00m op(delegate, skipna[38;5;241m=[39mskipna, [38;5;241m*[39m[38;5;241m*[39mkwds)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:96[0m, in [0;36mdisallow.__call__.<locals>._f[1;34m(*args, **kwargs)[0m
[0;32m     94[0m [38;5;28;01mtry[39;00m:
[0;32m     95[0m     [38;5;28;01mwith[39;00m np[38;5;241m.[39merrstate(invalid[38;5;241m=[39m[38;5;124m"[39m[38;5;124mignore[39m[38;5;124m"[39m):
[1;32m---> 96[0m         [38;5;28;01mreturn[39;00m f([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m     97[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m e:
[0;32m     98[0m     [38;5;66;03m# we want to transform an object array[39;00m
[0;32m     99[0m     [38;5;66;03m# ValueError message to the more typical TypeError[39;00m
[0;32m    100[0m     [38;5;66;03m# e.g. this is normally a disallowed function on[39;00m
[0;32m    101[0m     [38;5;66;03m# object arrays that contain strings[39;00m
[0;32m    102[0m     [38;5;28;01mif[39;00m is_object_dtype(args[[38;5;241m0[39m]):

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:158[0m, in [0;36mbottleneck_switch.__call__.<locals>.f[1;34m(values, axis, skipna, **kwds)[0m
[0;32m    156[0m         result [38;5;241m=[39m alt(values, axis[38;5;241m=[39maxis, skipna[38;5;241m=[39mskipna, [38;5;241m*[39m[38;5;241m*[39mkwds)
[0;32m    157[0m [38;5;28;01melse[39;00m:
[1;32m--> 158[0m     result [38;5;241m=[39m alt(values, axis[38;5;241m=[39maxis, skipna[38;5;241m=[39mskipna, [38;5;241m*[39m[38;5;241m*[39mkwds)
[0;32m    160[0m [38;5;28;01mreturn[39;00m result

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:421[0m, in [0;36m_datetimelike_compat.<locals>.new_func[1;34m(values, axis, skipna, mask, **kwargs)[0m
[0;32m    418[0m [38;5;28;01mif[39;00m datetimelike [38;5;129;01mand[39;00m mask [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m    419[0m     mask [38;5;241m=[39m isna(values)
[1;32m--> 421[0m result [38;5;241m=[39m func(values, axis[38;5;241m=[39maxis, skipna[38;5;241m=[39mskipna, mask[38;5;241m=[39mmask, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m    423[0m [38;5;28;01mif[39;00m datetimelike:
[0;32m    424[0m     result [38;5;241m=[39m _wrap_results(result, orig_values[38;5;241m.[39mdtype, fill_value[38;5;241m=[39miNaT)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:727[0m, in [0;36mnanmean[1;34m(values, axis, skipna, mask)[0m
[0;32m    724[0m     dtype_count [38;5;241m=[39m dtype
[0;32m    726[0m count [38;5;241m=[39m _get_counts(values[38;5;241m.[39mshape, mask, axis, dtype[38;5;241m=[39mdtype_count)
[1;32m--> 727[0m the_sum [38;5;241m=[39m _ensure_numeric(values[38;5;241m.[39msum(axis, dtype[38;5;241m=[39mdtype_sum))
[0;32m    729[0m [38;5;28;01mif[39;00m axis [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mgetattr[39m(the_sum, [38;5;124m"[39m[38;5;124mndim[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m):
[0;32m    730[0m     count [38;5;241m=[39m cast(np[38;5;241m.[39mndarray, count)

File [1;32mD:\Utilisateurs\rouxemi\AppData\Local\anaconda3\Lib\site-packages\pandas\core\nanops.py:1699[0m, in [0;36m_ensure_numeric[1;34m(x)[0m
[0;32m   1696[0m             x [38;5;241m=[39m [38;5;28mcomplex[39m(x)
[0;32m   1697[0m         [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m [38;5;28;01mas[39;00m err:
[0;32m   1698[0m             [38;5;66;03m# e.g. "foo"[39;00m
[1;32m-> 1699[0m             [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mCould not convert [39m[38;5;132;01m{[39;00mx[38;5;132;01m}[39;00m[38;5;124m to numeric[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;21;01merr[39;00m
[0;32m   1700[0m [38;5;28;01mreturn[39;00m x

[1;31mTypeError[0m: Could not convert MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM to numeric
TypeError: Could not convert MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM to numeric

